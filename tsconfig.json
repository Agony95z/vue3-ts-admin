{
  "compilerOptions": {
    "target": "esnext", // 目标代码 ts-js esnext--es6及以后的代码
    "module": "esnext", // 目标代码需要使用的模块化方案
    "strict": true,
    "jsx": "preserve", // 是否需要转化 preserve--保留
    "importHelpers": true, // 辅助导入功能
    "moduleResolution": "node", // 按照node方式去解析模块
    "skipLibCheck": true, // 跳过一些库的类型检测
    "esModuleInterop": true, // esm 和common.js 是否可以混合使用
    "allowSyntheticDefaultImports": true, // esm 和common.js 是否可以混合使用
    "sourceMap": true,
    "baseUrl": ".", // 文件路径在解析时基本url
    "types": [
      "webpack-env"
    ], // 指定具体要解析的类型
    "paths": {
      "@/*": [
        "src/*",
      ],
      "components/*": ["src/components/*"]
    }, // 编译阶段路径解析
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ] // 可以指定在项目中可以使用哪些库的类型（Proxy/Window/Document）
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
